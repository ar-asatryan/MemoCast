<div>
    <div class="form-inline">
        <button class="btn btn-primary mmc-item-button" id="bt-items-clear">
            Clear
        </button>
    <button class="btn btn-primary d-none">
        Фильтр
    </button>
    <a href="#" data-target="#new-title-form" data-toggle="modal" class="mmc-item-button btn btn-primary">
        <i class="fa fa-plus"></i>
    </a>
    <div class="form-group">
    <select class="mmc-item-button form-control" style="width: 200px;" id="select-titles"></select>
    </div>
    <select class="mmc-item-button form-control" id="audio-tracks" style="display: none;">
    </select>
    <div class="btn-group" role="group">
        <button type="button" class="mmc-item-button btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Кодировка
        <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
{{#each presets}}
        <li><a href="#" class="mmc-encoding-preset" data-encoding-preset="{{ _id }}">{{ label }} ({{ height }})</a></li>
{{/each}}
        </ul>
    </div>
    </div>
</div>

<div id="video-items-container">

</div>

<form id="new-title-form" class="modal">
    <div class="modal-dialog" role="document">
  <div class="modal-content">
    <div class="modal-header">
      <h5 class="modal-title">Add new video title</h5>
      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <i class="fa fa-times"></i>
      </button>
    </div>
    <div class="modal-body">
      <div class="form-group">
          <input type="text" name="title" id="tb-new-title" class="form-control" placeholder="Enter new title" />
      </div>
    </div>
    <div class="modal-footer">
      <button type="submit" id="bt-new-title-submit" class="btn btn-primary">
          <i class="fa fa-refresh fa-spin fa-fw" style="display: none;"></i>
          Add
      </button>
      <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
    </div>
  </div>
</div>
</form>



{{#section "scripts"}}

<script type="text/javascript">
$(function () {

    let $container = $('#video-items-container');
    let $tracks = $('#audio-tracks');
    let template = Handlebars.compile($("#template-video-items").html());
    let $titles = $('#select-titles');
    let audioTemplate = Handlebars.compile($('#template-audio-tracks').html());

    let filter = {};

    let selectedItems = { };

    $('.mmc-item-button').prop('disabled', true);

    let setSelectedItems = function (data) {
        selectedItems = data;
        $('.mmc-item-button').prop('disabled', Object.keys(selectedItems).length == 0);
        if (Object.keys(selectedItems).length == 1) {
            let id = Object.keys(selectedItems)[0];
            let url = '/api/admin/files';
            let params = {
                item : id,
                type : 'original'
            };
            $.ajax(url, {
                method: 'GET',
                data: params,
                success: function (response) {
                    if (response.length > 0) {
                        let file = response[0];
                        let info = file['media-info'];
                        if (info) {
                            let tracks = info.filter(function (item) {
                                return item.type === 'Audio';
                            });
                            tracks = tracks.map(function (item, index, arr) {
                                return {
                                    label: item.Title + ' (' + item.Language + ')',
                                    index: index
                                };
                            });
                            $tracks.html(audioTemplate(tracks));
                            $tracks.show();
                            console.log(tracks);
                        }
                    }
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }
    };

    let loadItems = function () {
        let url = '/api/admin/items';
        $.ajax(url, {
            method: 'GET',
            success: function (response) {
                response.forEach(function (item) {
                    if (item.createDate) {
                        var m = moment(item.createDate);
                        if (m.isValid()) {
                            item.createDate = m.fromNow();
                        }
                    }
                });
                $container.html(template(response));

                var pageLength = getStorageValue('items-page-length', 50);

                var search = getStorageValue('items-search');

                var table = $('#video-items').DataTable({
                    search: {
                        smart: true,
                        search: search
                    },
                    pageLength: pageLength,
                    responsive: true
                });

                table.on( 'length.dt', function ( e, settings, len ) {
                    setStorageValue('items-page-length', len);
                });

                table.on( 'search.dt', function () {
                    setStorageValue('items-search', table.search());
                });
            },
            error: function (err) {
                console.log(err);
            },
            complete: function () {
                setSelectedItems({});
            }
        })
    };

    $(document).on('click', '.mmc-encoding-preset', function () {
        let $a = $(this);
        let id = $a.data('encoding-preset');
        if (window.confirm('Are you sure want encode (' + $a.text() + ') selected videos?')) {
            let data = { 'encoding-preset' : id, items : Object.keys(selectedItems), audioTrack: parseInt($tracks.val()) };
            let url = '/api/admin/encoding-requests';
            $.ajax(url, {
                method: 'POST',
                data: data,
                success: function (response) {
                    console.log(response);
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }
    });

    $(document).on('change', '.mmc-item-checkbox', function (evt) {
        evt.stopPropagation();
        let $cb = $(this);
        let id = $cb.data('item-id');
        let checked = $cb.prop('checked');
        console.log({ id : id, checked : checked });
        if (checked) {
            selectedItems[id] = true;
        } else {
            delete selectedItems[id];
        }
        setSelectedItems(selectedItems);
    });

    loadItems();

    $titles.select2({
        ajax: {
            url: '/api/admin/autocomplete/videos',
            dataType: 'json',
            data: function (params) {
                return {
                    search: params.term
                };
            },
            delay: 250,
            cache: true,
            processResults: function (data, params) {
                return {
                    results : data.map(function (item) {
                        let title = item.title;
                        if (item.originaltitle && item.originaltitle != '') {
                          title += ' (' + item.originaltitle + ')';
                        }
                        if (item.year && item.year != '') {
                            title += ' (' + item.year +')';
                        }
                        let obj = {
                            id : item.id,
                            text: title,
                            data: item
                        };
                        return obj;
                    })
                }
            }
        },
        minimumInputLength: 3,
        maximumSelectionLength: 2
    });

    $titles.change(function () {
        let videoTitle = $titles.val();
        let update = { videoTitle : videoTitle };
        let ids = Object.keys(selectedItems);

        let url = '/api/admin/items';

        let data = {
            items: ids,
            update: update
        };

        $.ajax(url, {
            method: 'PUT',
            data: data,
            success: function () {
            },
            complete: function () {
                loadItems();
            }
        });

    });

    $('#new-title-form').submit(function (evt) {
        evt.preventDefault();

        let data = { createDate : new Date };

        $(this).serializeArray().forEach(function (item) {
            data[item.name] = item.value;
        });


        if (data.title == '') {
            return;
        }

        let $spinner = $('#bt-new-title-submit i');
        let $bt = $('#bt-new-title-submit');

        $spinner.show();
        $bt.prop('disabled', true);

        let url = '/api/admin/titles';

        $.ajax(url, {
            method: 'POST',
            data: data,
            success: function (response) {
                let videoTitleID = response._id;
                let ids = Object.keys(selectedItems);
                let url = '/api/admin/items';
                let data = {
                    items: ids,
                    update: {
                        videoTitle: videoTitleID
                    }
                };
                $.ajax(url, {
                    method: 'PUT',
                    data: data,
                    success: function () {
                        $spinner.hide();
                        $bt.prop('disabled', false);
                        $('#new-title-form').modal('hide');
                        window.open('/admin/videos/titles/' + videoTitleID, '_blank');
                    }
                });
            },
            error: function (err) {
                console.log(err);
            },
            complete: function () {
                loadItems();
            }
        });
    });

    $('#new-title-form').on('shown.bs.modal', function (evt) {
        $('#tb-new-title').focus().val('');
    });

    function resetItems() {
        $('.mmc-item-checkbox').prop('checked', false);
        setSelectedItems({});
    }

    $('#bt-items-clear').click(resetItems);

    $(document).on('click', '.mmc-checkbox-container', function (evt) {
        if (evt.target) {
            let $el = $(evt.target);
            if ($el.hasClass('mmc-item-checkbox')) {
                return;
            }
        }
        let $cb = $(this).find('.mmc-item-checkbox');
        $cb.prop('checked', !$cb.prop('checked'));
        let id = $cb.data('item-id');
        let checked = $cb.prop('checked');
        console.log({ id : id, checked : checked });
        if (checked) {
            selectedItems[id] = true;
        } else {
            delete selectedItems[id];
        }
        setSelectedItems(selectedItems);
    });

});
</script>

<script type="text/x-handlebars-template" id="template-audio-tracks">
\{{#each .}}
<<option value="\{{ index }}">\{{ label }}</option>
\{{/each}}
</script>

<script type="text/x-handlebars-template" id="template-video-items">
<!-- /.panel-heading -->
<table id="video-items" cellspacing="0" width="100%" class="display table table-striped table-bordered table-hover">
<thead>
<tr>
<th></th>
<th>Item</th>
<th>Title</th>
<th>Статус</th>
<th>Дата создания</th>
</tr>
</thead>
<tbody>
\{{#each .}}
<tr memocast-item-id="\{{ _id }}">
<td class="mmc-checkbox-container"><input class="mmc-item-checkbox" data-item-id="\{{ _id }}" type="checkbox" /></td>
<td>
    \{{#if isPublic }}
    <span class="fa fa-check text-success" />
    <span style="display: none;">true</span>
    \{{else}}
    <span class="fa fa-times text-danger" />
    <span style="display: none;">false</span>
    \{{/if}}

    \{{#if videoTitle}}
    <a href="/admin/videos/titles/\{{ videoTitle._id }}/\{{ _id }}">
        \{{#if title}}
        \{{ title }}
        \{{else}}
        <em>Без заголовка</em>
        \{{/if}}
    </a>
    \{{else}}
    \{{#if title}}
    \{{ title }}
    \{{else}}
    <em>Без заголовка</em>
    \{{/if}}
    \{{/if}}
</td>
<td title="\{{ videoTitle.title }}">
    \{{#if videoTitle}}

    \{{#if videoTitle.isPublic }}
    <span class="fa fa-check text-success" />
    <span style="display: none;">true</span>
    \{{else}}
    <span class="fa fa-times text-danger" />
    <span style="display: none;">false</span>
    \{{/if}}

    <a href="/admin/videos/titles/\{{ videoTitle._id }}">
    \{{ videoTitle.title }}
    \{{#if videoTitle.originalTitle}}
    &nbsp;(\{{videoTitle.originalTitle}})
    \{{/if}}
    </a>
    \{{/if}}
</td>
<td>\{{ status }}</td>
<td>\{{ createDate }}</td>
</tr>
\{{/each}}
</tbody>
</table>
</script>

{{/section}}
